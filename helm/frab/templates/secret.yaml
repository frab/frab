apiVersion: v1
kind: Secret
metadata:
  name: {{ include "frab.fullname" . }}-secret
  labels:
    {{- include "frab.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": pre-install
    "helm.sh/hook-weight": "-3"
    "helm.sh/resource-policy": keep
type: Opaque
data:
  {{- if .Values.secretKeyBase }}
  SECRET_KEY_BASE: {{ .Values.secretKeyBase | b64enc | quote }}
  {{- else }}
  SECRET_KEY_BASE: {{ randAlphaNum 64 | b64enc | quote }}
  {{- end }}
  {{- if .Values.rails.masterKey }}
  RAILS_MASTER_KEY: {{ .Values.rails.masterKey | b64enc | quote }}
  {{- end }}
  {{- if .Values.frab.smtp.password }}
  SMTP_PASSWORD: {{ .Values.frab.smtp.password | b64enc | quote }}
  {{- end }}
  {{- if .Values.frab.google.enabled }}
  GOOGLE_CLIENT_SECRET: {{ .Values.frab.google.clientSecret | b64enc | quote }}
  {{- end }}
  {{- if .Values.frab.ldap.enabled }}
  {{- if .Values.frab.ldap.bindPassword }}
  LDAP_BIND_PASSWORD: {{ .Values.frab.ldap.bindPassword | b64enc | quote }}
  {{- end }}
  {{- end }}
  {{- if .Values.frab.oidc.enabled }}
  OPENID_CONNECT_CLIENT_SECRET: {{ .Values.frab.oidc.clientSecret | b64enc | quote }}
  {{- end }}
  {{- if eq .Values.database.type "postgresql" }}
  DATABASE_URL: {{ printf "postgresql://%s:%s@%s:%d/%s" .Values.database.postgresql.username .Values.database.postgresql.password .Values.database.postgresql.host (.Values.database.postgresql.port | int) .Values.database.postgresql.database | b64enc | quote }}
  {{- else if eq .Values.database.type "mysql" }}
  DATABASE_URL: {{ printf "mysql2://%s:%s@%s:%d/%s" .Values.database.mysql.username .Values.database.mysql.password .Values.database.mysql.host (.Values.database.mysql.port | int) .Values.database.mysql.database | b64enc | quote }}
  {{- else if eq .Values.database.type "sqlite3" }}
  DATABASE_URL: {{ printf "sqlite3://%s" .Values.database.sqlite.path | b64enc | quote }}
  {{- end }}
  {{- if and .Values.rails.cache.enabled (eq .Values.rails.cache.type "redis") .Values.rails.cache.redis.password }}
  REDIS_CACHE_PASSWORD: {{ .Values.rails.cache.redis.password | b64enc | quote }}
  {{- end }}
  {{- if and (eq .Values.rails.sessionStore.type "redis") .Values.rails.sessionStore.redis.password }}
  REDIS_SESSION_PASSWORD: {{ .Values.rails.sessionStore.redis.password | b64enc | quote }}
  {{- end }}