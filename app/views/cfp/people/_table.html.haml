%table.table.table-striped
  %thead
    %tr
      %th.first
      %th= t("activerecord.attributes.event.title")
      - if @conference.event_state_visible
        %th= t("activerecord.attributes.event.state")
        %th= t("cfp.scheduled")
      - if @conference.feedback_enabled
        %th
        %th= t(:event_feedback)
      %th.last= t(:actions)
  %tbody
    - collection.each do |event|
      %tr
        %td= image_box event.logo, :small
        %td= event.title
        - if @conference.event_state_visible
          %td= event.state
          %td
            -if event.start_time
              =I18n.l(event.start_time, format: :long)
              %br
              =event.room&.name
            -else
              \-
        - if @conference.feedback_enabled
          %td
            %b= number_with_precision event.average_feedback, precision: 2
          %td
            - if event.event_feedbacks_count
              s<sub>N-1</sub> = #{event.feedback_standard_deviation} n = #{event.event_feedbacks_count}
        %td
          = link_to t("edit"), edit_cfp_event_path(event), class: "btn btn-primary btn-sm"
          - if @conference.event_state_visible || @conference.schedule_open?
            - if event.state == "unconfirmed"
              = token = @person.confirmation_token(event)
              - if token
                = link_to t("cfp.confirm"),  cfp_event_confirm_by_token_path(event.id, token: token), method: :post, class: "btn btn-success btn-sm"
            - if event.transition_possible? :withdrawn and event.start_time and event.start_time > Time.now
              = link_to t("cfp.withdraw"), withdraw_cfp_event_path(event), data: { controller: "confirm", action: "click->confirm#confirm", "confirm-message-value": t("cfp.withdrawal_confirmation") }, method: :put, class: "btn btn-danger btn-sm"
          - if @conference.schedule_open? && event.transition_possible?(:accept)
            = link_to t("cfp.accept"), accept_cfp_event_path(event), method: :put, class: "btn btn-success btn-sm"
      - if @conference.feedback_enabled
        - event.event_feedbacks.each do |feedback|
          - next if feedback.comment.blank?
          %tr
            %td
            - if @conference.event_state_visible
              %td{colspan: 2}
            - else
              %td
                = render 'shared/star_rating', id: "event_rating_#{event.id}", value: feedback.rating, readonly: true, size: 'sm'
            %td= feedback.comment
            %td
