.bulk-notification
  %h3= t('notifications_module.n_events_in_state_x', **{ count: e.count, state: t(state, scope: 'conferences_module') })
  - noticket = e.select { |e| e.ticket == nil }
  - subscribers = e.map { |e| e.subscribers.count }.sum
  - nosubscribers = e.select { |e| e.subscribers.count == 0 }
  - if noticket.count > 0
    %p
      - path = { :event_state => state, 'q[s]' => 'ticket_id' }
      = link_to(t('notifications_module.event_without_ticket_warning', :count => noticket.count), events_path(path))
      - noticket.each do |e|
        = link_to e.title, e
  - if nosubscribers.count > 0
    %p
      = t('notifications_module.warning_events_without_speakers', :count => nosubscribers.count)
      - nosubscribers.each do |e|
        = link_to e.title, e
  %p
  - if noticket.count == e.count
    = button_to(t('notifications_module.no_events_tickets'), {}, { disabled: true, class: "btn disabled"})
  - else
    = button_to(t('notifications_module.send_notification_to_subscribers',
                  **{ name: t(name, scope: 'notifications_module.notif'),
                      count: subscribers,
                      event: t('notifications_module.n_events', :count => e.count - noticket.count)}),
                { action: 'send_notification', notification: state },
                { class: "btn danger",
                  data: { confirm: t('notifications_module.send_notification_confirm',
                                     **{ name: t(name, scope: 'notifications_module.notif'),
                                         count: e.count - noticket.count}),
                          disable_with: t('work_in_progress') }})
