%section
  - if @conference.rooms.count == 0
    .row.mb-4
      .col-12
        .alert.alert-info
          = raw(markdown_render(t('conferences_module.show_welcome')))

  - if @conference.events.count == 0 and @conference.call_for_participation.nil?
    .row.mb-4
      .col-12
        .alert.alert-warning
          = raw(markdown_render(t('conferences_module.show_no_event')))
  - if policy(@conference).orga?
    - if @conference.in_the_past?
      .row.mb-4
        .col-12
          .alert.alert-secondary
            = t('conferences_module.conference_in_past')

    .row.mb-4
      .col-12
        .card
          .card-header.d-flex.justify-content-between.align-items-center
            %h5.card-title.mb-0= t('conferences_module.recent_changes')
            - if @versions.count > 5
              = link_to t('navigation.more'), recent_changes_path, class: "btn btn-outline-primary btn-sm"
          .card-body
            - if @versions.empty?
              .text-muted.text-center.py-3
                = raw(markdown_render(t('conferences_module.recent_changes_text')))
            - else
              = render "recent_changes/table"
  .row
    .col-12
      .card
        .card-header
          %h5.card-title.mb-0= t('conferences_module.statistics')
        .card-body
          - if @conference.events.count == 0
            .text-muted.text-center.py-3
              = t('conferences_module.statistics_empty')
          - else
            .statistics-dashboard{data: { controller: "statistics", "statistics-events-url-value": events_by_state_statistics_path, "statistics-language-url-value": language_breakdown_statistics_path, "statistics-gender-url-value": gender_breakdown_statistics_path }}

              .row.g-4
                .col-12
                  %h6= t('events_module.events_by_state')
                  .btn-group.btn-group-sm.mb-3{role: "group"}
                    = link_to t('all'), "#", class: "btn btn-outline-primary", data: { action: "click->statistics#filterAllEvents" }
                    = link_to t('lectures_only'), "#", class: "btn btn-outline-primary", data: { action: "click->statistics#filterLecturesOnly" }
                    = link_to t('workshops_only'), "#", class: "btn btn-outline-primary", data: { action: "click->statistics#filterWorkshopsOnly" }
                    = link_to t('others_only'), "#", class: "btn btn-outline-primary", data: { action: "click->statistics#filterOthersOnly" }

                  .row.g-4
                    .col-12.col-lg-8
                      #event_state_graph.border.rounded.p-2{style: "height: 300px; min-height: 300px;", data: { "statistics-target": "eventsGraph" }}

                    .col-12.col-lg-4
                      .table-responsive
                        %table.table.table-sm.table-striped
                          %thead
                            %tr
                              %th= t('conferences_module.new')
                              %th= t('conferences_module.review')
                              %th= t('conferences_module.withdrawn')
                              %th= t('conferences_module.accepting')
                              %th= t('conferences_module.unconfirmed')
                              %th= t('conferences_module.confirmed')
                              %th= t('conferences_module.scheduled')
                              %th= t('conferences_module.canceled')
                              %th= t('conferences_module.rejecting')
                              %th= t('conferences_module.rejected')
                              %th= t('conferences_module.total')
                          %tbody
                            %tr
                              %td= @conference.events.where(state: :new).count
                              %td= @conference.events.where(state: :review).count
                              %td= @conference.events.where(state: :withdrawn).count
                              %td= @conference.events.where(state: :accepting).count
                              %td= @conference.events.where(state: :unconfirmed).count
                              %td= @conference.events.where(state: :confirmed).count
                              %td= @conference.events.where(state: :scheduled).count
                              %td= @conference.events.where(state: :canceled).count
                              %td= @conference.events.where(state: :rejecting).count
                              %td= @conference.events.where(state: :rejected).count
                              %td.fw-bold= @conference.events.count

                - if @conference.languages.count > 1
                  .col-12.col-md-6
                    %h6= t('events_module.events_by_language')
                    .btn-group.btn-group-sm.mb-3{role: "group"}
                      = link_to t('all'), "#", class: "btn btn-outline-secondary", data: { action: "click->statistics#filterAllLanguages" }
                      = link_to t('accepted_only'), "#", class: "btn btn-outline-secondary", data: { action: "click->statistics#filterAcceptedLanguages" }
                    #event_language_graph.border.rounded.p-2{style: "height: 300px; min-height: 300px;", data: { "statistics-target": "languageGraph" }}

                - if @conference.gender_breakdown.count > 1
                  .col-12.col-md-6
                    %h6= t('events_module.events_by_gender')
                    .btn-group.btn-group-sm.mb-3{role: "group"}
                      = link_to t('all'), "#", class: "btn btn-outline-secondary", data: { action: "click->statistics#filterAllGenders" }
                      = link_to t('accepted_only'), "#", class: "btn btn-outline-secondary", data: { action: "click->statistics#filterAcceptedGenders" }
                    #event_gender_graph.border.rounded.p-2{style: "height: 300px; min-height: 300px;", data: { "statistics-target": "genderGraph" }}


