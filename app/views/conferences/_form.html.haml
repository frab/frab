= simple_form_for(@conference, url: @conference.new_record? ? create_conference_path : conference_path) do |f|
  - if @conference.new_record? && @possible_parents.any?
    .card.shadow-sm.mb-4
      .card-header.d-flex.align-items-center
        %i.bi.bi-diagram-2.me-2
        %h5.mb-0= t(:parent_conference)
      .card-body
        = f.input :parent_id, as: :select, collection: @possible_parents, hint: "Please select a parent for this new conference. A conferences nested under a parent will inherit the days and some settings (such as time slots and time zones etc.) from the parent, and the configuration of rooms and tracks may only be done with administation right for the parent conference. The parent's schedule export will also include events from the sub-conferences. If you don't know what this means, just leave this field blank, but note that this setting cannot be changed after the conference has been created."

  - elsif @conference.sub_conference?
    .card.shadow-sm.mb-4
      .card-header.d-flex.align-items-center
        %i.bi.bi-diagram-2.me-2
        %h5.mb-0= t(:parent_conference)
      .card-body
        .alert.alert-info.mb-0
          This conference is a sub-conference of
          %strong="'#{@conference.parent.title}'."

  .card.shadow-sm.mb-4
    .card-header.d-flex.align-items-center
      %i.bi.bi-info-circle.me-2
      %h5.mb-0= t(:basic_information)
    .card-body
      .row.g-3
        .col-12.col-md-6
          = f.input :title, hint: t('conferences_module.inputs.hints.title')
        .col-12.col-md-6
          = f.input :acronym, hint: t('conferences_module.inputs.hints.acronym')
        .col-12.col-md-6
          = f.input :email, hint: t('conferences_module.inputs.hints.email')
        .col-12.col-md-6
          = f.input :bcc_address, hint: t('conferences_module.inputs.hints.bcc_address')
        .col-12.col-md-4
          = f.input :color, as: 'color', hint: t('conferences_module.inputs.hints.color'), input_html: { class: 'color' }
        .col-12
          = f.input :logo, as: :file, hint: "Upload a conference logo (recommended size: 256x256px or larger). This will appear in the public schedule header."
          - if @conference.logo.present?
            .mt-2
              %small.text-muted Current logo:
              %br
              = image_tag @conference.logo.url(:small), alt: @conference.title, class: "border rounded", style: "max-height: 64px;"
  -if @conference.main_conference?
    .card.shadow-sm.mb-4(data-controller="duration")
      .card-header.d-flex.align-items-center
        %i.bi.bi-clock-history.me-2
        %h5.mb-0= t(:timeslot_configuration)
      .card-body
        .row.g-3
          .col-12.col-md-6
            = f.input :timezone, as: :time_zone, hint: t('conferences_module.inputs.hints.timezone')
          .col-12.col-md-6
            = f.input :timeslot_duration, as: :select, collection: timeslot_durations(@conference), hint: t('conferences_module.inputs.hints.timeslot_duration'), input_html: { data: { "duration-target": "timeslotSelect" } }
          .col-12.col-md-6
            = f.input :default_timeslots, as: :select, collection: 1..20, hint: t('conferences_module.inputs.hints.default_timeslots'), input_html: { data: { "duration-target": "defaultTimeslotsSelect" } }
          .col-12.col-md-6
            = f.input :max_timeslots, as: :select, collection: 1..100, hint: t('conferences_module.inputs.hints.'), input_html: { data: { "duration-target": "maxTimeslotsSelect" } }
        = f.input :allowed_durations_minutes_csv, as: :hidden, input_html: { data: { "duration-target": "csvInput" } }
        = f.label t('accepted_event_durations')
        %div.conf-accepted-durations.col-md-6.offset4#allowed_durations(data-duration-target="checkboxContainer")
          %ul
            = "..."
        %div.input.form-text= t('conferences_module.inputs.hints.accepted_event_durations')
  = dynamic_association :languages, t(:event_languages), f, hint: t('conferences_module.inputs.hints.event_languages')
  
  .card.shadow-sm.mb-4
    .card-header.d-flex.align-items-center
      %i.bi.bi-file-earmark-plus.me-2
      %h5.mb-0= t(:submission_configuration)
    .card-body
      = f.input :allowed_event_types_presets, as: :check_boxes, collection: translated_options(Event::TYPES), label: t('allowed_event_types'), hint: t('conferences_module.inputs.hints.allowed_event_types')
      = f.input :allowed_event_types_extras, as: :string, label: t('allowed_event_types_extras'), hint: t('conferences_module.inputs.hints.allowed_event_types_extras')
      = f.input :event_state_visible, as: :boolean, hint: t('conferences_module.inputs.hints.event_state_visible')
      = f.input :attachment_title_is_freeform, as: :boolean, hint: t('conferences_module.inputs.hints.attachment_title_is_freeform')
      = f.input :default_recording_license, hint: t('conferences_module.inputs.hints.default_recording_license')
  .card.shadow-sm.mb-4
    .card-header.d-flex.align-items-center
      %i.bi.bi-toggles.me-2
      %h5.mb-0= t(:features)
    .card-body
      .row.g-3
        .col-12.col-md-6
          = f.input :feedback_enabled, as: :boolean, hint: t('conferences_module.inputs.hints.feedback_enabled')
          = f.input :expenses_enabled, as: :boolean, hint: t('conferences_module.inputs.hints.expenses_enabled')
        .col-12.col-md-6
          = f.input :transport_needs_enabled, as: :boolean, hint: t('conferences_module.inputs.hints.transport_needs_enabled')
          = f.input :bulk_notification_enabled, as: :boolean, hint: t('conferences_module.inputs.hints.bulk_notification_enabled')
  .card.shadow-sm.mb-4
    .card-header.d-flex.align-items-center
      %i.bi.bi-server.me-2
      %h5.mb-0= t(:ticket_server)
    .card-body
      = f.input :ticket_type, as: :radio_buttons, collection: translated_options(Conference::TICKET_TYPES)
  .mt-4.p-3.bg-light.rounded.d-flex.gap-2
    = f.button :submit, class: 'btn btn-primary btn-lg'
    = link_to t('cancel'), :back, class: "btn btn-outline-secondary btn-lg"

