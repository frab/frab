%section
  .page-header
    %h1 Welcome
  .row
    .span16
      - if @conference.rooms.count == 0
        .blank-slate
          %p
            Welcome, you seem to have just created this
            conference. A good first step would be to go
            to the <em>Conference Settings</em> tab above
            and add a room to this conference. This will
            be needed to schedule your program.
      - if @conference.events.count == 0 and @conference.call_for_participation.nil?
        .blank-slate
          %p
            This conference does not yet have any events.
            (Note that throughout the application, the
            generic term 'event' is used to refer to all
            sessions within your conference, no matter if
            they are talks, workshops, panels or something
            else entirely).
          %p
            Start adding events by clicking on the
            <em>Events</em> tab above. Or start a call for
            papers, to allow others to submit events for
            you to review.
  - if can? :manage, CallForParticipation
    .row
      .span16
        %h2
          Recent changes
          %small= link_to "more >>", recent_changes_path
        - if @versions.empty?
          .blank-slate
            %p
              Once you, or others start creating data for this
              conference, you will find who changed what here.
              This is especially interesting if you conduct a
              call for papers. In this case, this area allows
              you to quickly see if new submissions came in.
        - else
          = render "recent_changes/table"
          %p
  .row
    .span16
      %h2 Statistics
      - if @conference.events.count == 0
        .blank-slate
          %p
            Once you created some events for this conference,
            or gathered submissions through a call for papers,
            you will find some statistics about them here.
      - else
        %h4 Events by state
        %p
          = link_to "All", "#", id: "events_all_types"
          |
          = link_to "lectures only", "#", id: "events_lectures_only"
          |
          = link_to "workshops only", "#", id: "events_workshops_only"
          |
          = link_to "others only", "#", id: "events_others_only"
        #event_state_graph(style="width:600px;height:300px;")
        %table.zebra-stripe
          %thead
            %tr
              %th new
              %th review
              %th withdrawn
              %th accepting
              %th unconfirmed
              %th confirmed
              %th scheduled
              %th canceled
              %th rejecting
              %th rejected
              %th total
          %tbody
            %tr
              %td= @conference.events.where(state: :new).count
              %td= @conference.events.where(state: :review).count
              %td= @conference.events.where(state: :withdrawn).count
              %td= @conference.events.where(state: :accepting).count
              %td= @conference.events.where(state: :unconfirmed).count
              %td= @conference.events.where(state: :confirmed).count
              %td= @conference.events.where(state: :scheduled).count
              %td= @conference.events.where(state: :canceled).count
              %td= @conference.events.where(state: :rejecting).count
              %td= @conference.events.where(state: :rejected).count
              %td= @conference.events.count
      - if @conference.languages.count > 1
        %h4 Events by language
        %p
          = link_to "All", "#", id: "languages_all_events"
          |
          = link_to "Accepted only", "#", id: "languages_accepted_events_only"
        #event_language_graph(style="width:400px;height:300px;")

      - if @conference.gender_breakdown.count > 1
        %h4 Events by gender
        %p
          = link_to "All", "#", id: "gender_all_events"
          |
          = link_to "Accepted only", "#", id: "gender_accepted_events_only"
        #event_gender_graph(style="width:400px;height:300px;")

:coffeescript
  update_languages_breakdown = (accepted_only = false) ->
    if accepted_only
      params = {"accepted_only": 1}
    else
      params = {}
    $.ajax(
      url: "#{language_breakdown_statistics_path}",
      type: "GET",
      dataType: "json",
      data: params,
      success: (data) ->
        $.plot($("#event_language_graph"), data, {series: {pie: {show: true}}})
    )

  update_gender_breakdown = (accepted_only = false) ->
    if accepted_only
      params = {"accepted_only": 1}
    else
      params = {}
    $.ajax(
      url: "#{gender_breakdown_statistics_path}",
      type: "GET",
      dataType: "json",
      data: params,
      success: (data) ->
        $.plot($("#event_gender_graph"), data, {series: {pie: {show: true}}})
    )

  update_events_breakdown = (type = "") ->
    if type
      params = {"type": type}
    else
      params = {}
    $.ajax(
      url: "#{events_by_state_statistics_path}",
      type: "GET",
      data: params,
      dataType: "json",
      success: (data) ->
        $.plot($("#event_state_graph"), data, {
          series: {
            bars: { show: true, barWidth: 1 }
          },
          xaxis: {
            ticks: [[0.5, "undecided"], [1.5,"accepted"], [2.5, "rejected"], [3.5, "withdrawn/canceled"]]
          }
        })
    )

  $ ->
    $("#events_all_types").click (event) ->
      update_events_breakdown()
    $("#events_lectures_only").click (event) ->
      update_events_breakdown("lectures")
    $("#events_workshops_only").click (event) ->
      update_events_breakdown("workshops")
    $("#events_others_only").click (event) ->
      update_events_breakdown("others")
    update_events_breakdown()

    $("#languages_all_events").click (event) ->
      update_languages_breakdown()
      event.preventDefault()
    $("#languages_accepted_events_only").click (event) ->
      update_languages_breakdown(true)
      event.preventDefault()
    update_languages_breakdown()

    $("#gender_all_events").click (event) ->
      update_gender_breakdown()
      event.preventDefault()
    $("#gender_accepted_events_only").click (event) ->
      update_gender_breakdown(true)
      event.preventDefault()
    update_gender_breakdown()

