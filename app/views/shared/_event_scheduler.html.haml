%ul.nav.nav-tabs
  - @conference.days.each_with_index do |day, index|
    %li.nav-item
      = link_to day.label, schedule_path(day: index), class: "nav-link #{'active' if day_active?(index)}"
- if @conference.rooms.empty?
  .row
    .col-md-12
      .blank-slate
        %p= raw(markdown_render(t('events_module.error_no_room')))
- elsif @conference.events.count == 0
  .row
    .col-md-12
      .blank-slate
        %p= raw(markdown_render(t('events_module.error_no_event')))
- elsif @conference.days.count == 0
  .row
    .col-md-12
      .blank-slate
        %p= raw(markdown_render(t('events_module.error_no_day')))
- else
  %div{data: { controller: "schedule" }}
    .row
      .col-md-12
        %p
          %b= t('events_module.col_toggle_rooms')
        %p
          - @conference.rooms.each do |room|
            = link_to room.name, "#", class: "btn btn-sm btn-success toggle-room", data: {room: room.name.downcase}
          = link_to t('events_module.hide_all'), "#", id: "hide-all-rooms", class: "btn btn-sm btn-danger"
    .row
      .col-md-12
        - @conference.rooms.each do |room|
          - reset_cycle
          %table.room{:"data-room" => room.name.downcase, :"data-room-id" => room.id}
            %thead
              %tr
                %th= room.name
            %tbody
              - slot = 0
              - each_timeslot do  |time|
                %tr{class: cycle('odd', 'even')}
                  %td{:"data-time" => time.to_fs(:rfc822)}
                    - if slot % @conference.default_timeslots == 0
                      = time.strftime("%H:%M")
                - slot += 1
    .row
      .col-md-12
        .clear
        #event-pane{data: { "schedule-target": "eventPane" }}
          - @scheduled_events.each do |event|
            = render 'event', event: event
        #add-event-modal.modal{tabindex: "-1", "aria-labelledby": "add-event-modal-label", "aria-hidden": "true", style: "display: none;", data: { "schedule-target": "addEventModal" }}
          .modal-dialog
            .modal-content
              .modal-header
                %h3.modal-title#add-event-modal-label=t('events_module.add_event_at', time: content_tag(:span, '', id: 'current-time', data: { "schedule-target": "currentTime" })).html_safe
                %button.btn-close{type: "button", "data-bs-dismiss": "modal", "aria-label": "Close"}
              .modal-body
                %p
                  = form_tag schedule_update_filters_path, method: :get, id: "update-filters" do
                    %p
                      = label_tag "track_select", t('events_module.track_select')
                      = select_tag "track_select", content_tag(:option, t('all'), selected: true) + options_from_collection_for_select(@conference.tracks, :id, :name), data: { "schedule-target": "trackSelect" }
                    %p
                      = label_tag "event_type_select", t('events_module.event_type_select')
                      = select_tag "event_type_select", options_from_collection_for_select(translated_options(@conference.events.group(:event_type).pluck(:event_type)), :last, :first), include_blank: t('all'), data: { "schedule-target": "eventTypeSelect" }
                %p
                  %ul#unscheduled-events{data: { "schedule-target": "unscheduledEvents" }}
                    = render 'unscheduled_events'
              .modal-footer
                &nbsp;

