= simple_form_for(@event, html: {multipart: true}) do |f|
  %fieldset.inputs
    %legend= t('basic_information')
    = f.input :title
    = f.input :subtitle
    - @event.build_ticket unless @event.ticket
    = f.simple_fields_for :ticket do |ticket|
      = ticket.input :remote_ticket_id
    = f.input :event_type, collection: translated_options(@conference.allowed_event_types_as_list)
    = f.association :track, collection: @conference.tracks
    = f.input :time_slots, as: :select, collection: timeslots
    = f.input :language, as: :language_select, only: @conference.language_codes
    = f.input :public, as: :inline_boolean, hint: t('events_module.inputs.hints.public')
    = image_input_box(f.object.logo)
    = f.input :logo
  %fieldset.inputs
    %legend= t('state')
    = f.input :state, collection: Event.state_machine.states.map { |st| [st.display_name, st.name.to_s] }
  %fieldset.inputs
    %legend= t('time_and_place')
    = f.input :start_time do
      = f.select :start_time, grouped_options_for_select(@start_time_options, @event.start_time), { include_blank: true }
    = f.association :room, collection: @conference.rooms
  - if @conference.classifiers.any?
    = render partial: 'event_classifiers', locals: { f: f }
  %fieldset.inputs
    %legend= t('cfp.detailed_description')
    = f.input :abstract, input_html: {rows: 4}, hint: t('cfp.event_abstract_hint')
    = f.input :description,input_html: {rows: 4}, hint: t('cfp.event_description_hint')
  %fieldset.inputs
    %legend= t('notes')
    = f.input :note, input_html: {rows: 2}, hint: t('events_module.inputs.hints.note')
    = f.input :submission_note, input_html: {rows: 2}, hint: t('events_module.inputs.hints.submission_note')
  %fieldset.inputs
    %legend= t('additional_resources')
    = f.input :do_not_record, as: :inline_boolean, hint: t('events_module.inputs.hints.do_not_record')
    = f.input :tech_rider, input_html: {rows: 2}, hint: t('events_module.inputs.hints.tech_rider')
    = f.input :recording_license, hint: t('events_module.inputs.hints.recording_license')
    = dynamic_association :links, t('links'), f
    = dynamic_association :event_attachments, t('events_module.event_attachments'), f
  .actions
    = f.button :submit, class: 'primary'
- if EventAttachment::PRESERVE_FILE_ATTACHMENTS
  %p{class: 'help-block'}
    = t('attachements_may_be_saved', scope: 'cfp')
