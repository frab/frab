.modal-header
  = link_to "Ã—", "#", class: "close"
  %h3
    = t('events_module.bulk_edit.title', count: @num_of_matching_events)
.modal-body#filter_form
- if policy(@conference).manage?
  %div.actions.editables
    = select_tag 'edit_selector',
      options_for_select( [ [t('events_module.bulk_edit.set_new_track'),      :set_new_track],
                            [t('events_module.bulk_edit.set_new_event_type'), :set_new_event_type],
                            [t('events_module.bulk_edit.set_new_state'),      :set_new_state],
                            [t('events_module.bulk_edit.add_person'),         :add_person],
                            [t('events_module.bulk_edit.set_duration'),       :set_duration]]),
      include_blank: t('select_one'),
      style: "width:400px"
  %div.editable.set_new_track{style: "display:none;"}
    - if @conference.tracks.any?
      = simple_form_for(:bulk_edit_track, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
        = f.label t('events_module.bulk_edit.set_new_track')
        = f.hidden_field 'bulk_set_attribute', value: 'track_name', name: 'bulk_set_attribute'
        = select_tag 'bulk_set_value', options_for_select(@conference.tracks.map { |t| t.name.to_s }), include_blank: t('select_one'), style: "width:400px"
        .actions= f.button :submit,
                  t('set'),
                  name: 'bulk_set',
                  id: 'bulk_set',
                  data: { confirm: t('events_module.bulk_edit.set_track_confirm', count: @num_of_matching_events) },
                  class: 'danger'
  %div.editable.set_new_event_type{style: "display:none;"}
    = simple_form_for(:bulk_edit_event_type, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
      = f.label t('events_module.bulk_edit.set_new_event_type')
      = f.hidden_field 'bulk_set_attribute', value: 'event_type', name: 'bulk_set_attribute'
      = select_tag 'bulk_set_value', options_for_select(translated_options(@conference.allowed_event_types_as_list)), include_blank: t('select_one'), style: "width:400px"
      .actions= f.button :submit,
                t('set'),
                name: 'bulk_set',
                id: 'bulk_set',
                data: { confirm: t('events_module.bulk_edit.set_events_type_confirm', count: @num_of_matching_events) },
                class: 'danger'
  %div.editable.set_new_state{style: "display:none;"}
    = simple_form_for(:bulk_edit_event_state, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
      = f.label t('events_module.bulk_edit.set_new_state')
      = f.hidden_field 'bulk_set_attribute', value: 'state', name: 'bulk_set_attribute'
      = select_tag 'bulk_set_value',
                   options_for_select(Event.state_machine.states.map { |st| [t(st.name.to_s, scope: 'conferences_module'), st.name.to_s] }),
                   include_blank: t('select_one'), style: "width:400px"
      .actions= f.button :submit,
                t('set'),
                name: 'bulk_set',
                id: 'bulk_set',
                data: { confirm: t('events_module.bulk_edit.set_events_confirm', count: @num_of_matching_events) },
                class: 'danger'
  %div.editable.add_person{style: "display:none;"}
    = simple_form_for(:bulk_edit_add_person,
                      url: batch_actions_events_path(request.query_parameters),
                      method: :post,
                      data: { persons: Person.fullname_options } ) do |f|
      .peoplefilter
        = f.label t('events_module.bulk_edit.add_person')
        = text_field_tag :filter, '', style: "width: 130px"
        %span#display_box.accepted{ style: 'max-width: 260px;'}= ''
        %span#person_select{style: "display: none;"}= f.input_field :person_list,
                                    collection: [['', '']],
                                    label: false,
                                    style: 'width: 260px;'
        %span#person_id{style: "display: none;"}= text_field_tag :person_id
        <br/>
        = f.label t('role_str')
        = select_tag :event_role,
                     options_for_select(translated_options(EventPerson::ROLES)),
                     include_blank: t('select_one'),
                     style: "width:200px"
        .actions= f.button :submit,
                  t('add'),
                  name: 'bulk_add_person',
                  disabled: true,
                  id: 'bulk_add_person',
                  data: { confirm: t('events_module.bulk_edit.add_person_confirm', count: @num_of_matching_events) },
                  class: 'danger'
  %div.editable.set_duration{style: "display:none;"}
    = simple_form_for(:bulk_edit_track, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
      = f.label t('events_module.bulk_edit.set_duration')
      = f.hidden_field 'bulk_set_attribute', value: 'time_slots', name: 'bulk_set_attribute'
      = select_tag 'bulk_set_value', options_for_select(timeslots), include_blank: t('select_one'), style: "width:400px"
      .actions= f.button :submit,
                t('set'),
                name: 'bulk_set',
                id: 'bulk_set',
                data: { confirm: t('events_module.bulk_edit.set_duration_confirm', count: @num_of_matching_events) },
                  class: 'danger'
= javascript_include_tag "person_filter"
:javascript


  $("#edit_selector").on('change', function () {

    $("div.editable").hide();
    if (this.value) {
      $("div." + this.value).show();
    }
  });
:coffeescript
  window.update_and_attach_person_filter("#{lookup_people_url}", $("div.editable.add_person"))

  update_submit_button = () ->
    $("#bulk_add_person").attr("disabled", !($("#event_role").val() &&
                                             $("input#person_id").val()))

  $("input#person_id").change  ->
    update_submit_button()

  $("#event_role").change ->
    update_submit_button()