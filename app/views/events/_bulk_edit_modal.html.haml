.modal-header
  %h4.modal-title
    %i.bi.bi-pencil-square.me-2
    = t('events_module.bulk_edit.title', count: @num_of_matching_events)
  %button.btn-close{type: "button", "data-bs-dismiss": "modal", "aria-label": "Close"}
.modal-body#filter_form{ data: { controller: "bulk-edit" } }
  - if policy(@conference).manage?
    .mb-4
      %label.form-label.fw-semibold= t('events_module.bulk_edit.select_action', default: 'Select an action:')
      = select_tag 'edit_selector',
        options_for_select( [ [t('events_module.bulk_edit.set_new_track'),      :set_new_track],
                              [t('events_module.bulk_edit.set_new_event_type'), :set_new_event_type],
                              [t('events_module.bulk_edit.set_new_state'),      :set_new_state],
                              [t('events_module.bulk_edit.add_person'),         :add_person],
                              [t('events_module.bulk_edit.set_duration'),       :set_duration]]),
        include_blank: t('select_one'),
        class: "form-select",
        data: { "bulk-edit-target": "selector", action: "change->bulk-edit#selectorChanged" }
    %div.editable.set_new_track.card.mt-3{style: "display:none;", data: { "bulk-edit-target": "editable" }}
      .card-body
        - if @conference.tracks.any?
          = simple_form_for(:bulk_edit_track, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
            = f.hidden_field 'bulk_set_attribute', value: 'track_name', name: 'bulk_set_attribute'
            .mb-3
              %label.form-label= t('events_module.bulk_edit.set_new_track')
              = select_tag 'bulk_set_value', options_for_select(@conference.tracks.map { |t| t.name.to_s }), include_blank: t('select_one'), class: "form-select"
            .d-flex.justify-content-end
              = f.button :submit, t('set'), name: 'bulk_set', id: 'bulk_set', data: { controller: "confirm", action: "click->confirm#confirm", "confirm-message-value": t('events_module.bulk_edit.set_track_confirm', count: @num_of_matching_events) }, class: 'btn btn-primary'
        - else
          .alert.alert-info= t('events_module.bulk_edit.no_tracks', default: 'No tracks available')
    %div.editable.set_new_event_type.card.mt-3{style: "display:none;", data: { "bulk-edit-target": "editable" }}
      .card-body
        = simple_form_for(:bulk_edit_event_type, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
          = f.hidden_field 'bulk_set_attribute', value: 'event_type', name: 'bulk_set_attribute'
          .mb-3
            %label.form-label= t('events_module.bulk_edit.set_new_event_type')
            = select_tag 'bulk_set_value', options_for_select(translated_options(@conference.allowed_event_types_as_list)), include_blank: t('select_one'), class: "form-select"
          .d-flex.justify-content-end
            = f.button :submit, t('set'), name: 'bulk_set', id: 'bulk_set', data: { controller: "confirm", action: "click->confirm#confirm", "confirm-message-value": t('events_module.bulk_edit.set_events_type_confirm', count: @num_of_matching_events) }, class: 'btn btn-primary'
    %div.editable.set_new_state.card.mt-3{style: "display:none;", data: { "bulk-edit-target": "editable" }}
      .card-body
        = simple_form_for(:bulk_edit_event_state, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
          = f.hidden_field 'bulk_set_attribute', value: 'state', name: 'bulk_set_attribute'
          .mb-3
            %label.form-label= t('events_module.bulk_edit.set_new_state')
            = select_tag 'bulk_set_value', options_for_select(Event.state_machine.states.map { |st| [t(st.name.to_s, scope: 'conferences_module'), st.name.to_s] }), include_blank: t('select_one'), class: "form-select"
          .d-flex.justify-content-end
            = f.button :submit, t('set'), name: 'bulk_set', id: 'bulk_set', data: { controller: "confirm", action: "click->confirm#confirm", "confirm-message-value": t('events_module.bulk_edit.set_events_confirm', count: @num_of_matching_events) }, class: 'btn btn-primary'
    %div.editable.add_person.card.mt-3{style: "display:none;", data: { "bulk-edit-target": "editable" }}
      .card-body
        = simple_form_for(:bulk_edit_add_person, url: batch_actions_events_path(request.query_parameters), method: :post, data: { persons: Person.fullname_options } ) do |f|
          .peoplefilter{data: { controller: "person-filter", "person-filter-url-value": lookup_people_path }}
            .mb-3
              %label.form-label= t('events_module.bulk_edit.add_person')
              = text_field_tag :filter, '', class: "form-control", placeholder: t('search_person', default: 'Search person...'), data: { "person-filter-target": "filter" }
              %span#display_box.accepted.mt-2.d-block{ data: { "person-filter-target": "display" } }= ''
              %span#person_select{style: "display: none;"}
                = f.input_field :person_list, collection: [['', '']], label: false, class: "form-select", data: { "person-filter-target": "select" }
              %span#person_id{style: "display: none;"}
                = text_field_tag :person_id, '', data: { "bulk-edit-target": "personId", action: "change->bulk-edit#personChanged", "person-filter-target": "hidden" }
            .mb-3
              %label.form-label= t('role_str')
              = select_tag :event_role, options_for_select(translated_options(EventPerson::ROLES)), include_blank: t('select_one'), class: "form-select", data: { "bulk-edit-target": "eventRole", action: "change->bulk-edit#roleChanged" }
            .d-flex.justify-content-end
              = f.button :submit, t('add'), name: 'bulk_add_person', disabled: true, id: 'bulk_add_person', data: { controller: "confirm", action: "click->confirm#confirm", "confirm-message-value": t('events_module.bulk_edit.add_person_confirm', count: @num_of_matching_events), "bulk-edit-target": "submitButton" }, class: 'btn btn-primary'
    %div.editable.set_duration.card.mt-3{style: "display:none;", data: { "bulk-edit-target": "editable" }}
      .card-body
        = simple_form_for(:bulk_edit_track, url: batch_actions_events_path(request.query_parameters), method: :post) do |f|
          = f.hidden_field 'bulk_set_attribute', value: 'time_slots', name: 'bulk_set_attribute'
          .mb-3
            %label.form-label= t('events_module.bulk_edit.set_duration')
            = select_tag 'bulk_set_value', options_for_select(timeslots), include_blank: t('select_one'), class: "form-select"
          .d-flex.justify-content-end
            = f.button :submit, t('set'), name: 'bulk_set', id: 'bulk_set', data: { controller: "confirm", action: "click->confirm#confirm", "confirm-message-value": t('events_module.bulk_edit.set_duration_confirm', count: @num_of_matching_events) }, class: 'btn btn-primary'