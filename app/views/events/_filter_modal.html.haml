.modal-header
  %h5.modal-title
    = t('events_module.filter_modal.select_filter_for', filtername: filter.filter_name || t(filter.filter_name_i18n))
  %button.btn-close{type: "button", "data-bs-dismiss": "modal", "aria-label": "Close"}

.modal-body#filter_form{ data: { controller: "filter", "filter-qname-value": filter.qname } }
  = simple_form_for(:filter_form, data: { "filter-target": "form" }, url: '#', method: :get ) do |f|
    - case filter.type
    - when :text
      - options = localized_filter_options(@conference.events.includes(:track).distinct.pluck(filter.attribute_name), filter.i18n_scope)
      - selected_values = split_filter_string(params[filter.qname]) if params[filter.qname]
      %div#filter-values-select{ data: { "filter-target": "valuesSelect" } }
        = f.input :possible_values,
                  as: :check_boxes,
                  label: '',
                  required: false,
                  collection: options,
                  checked: selected_values
    - when :range
      - op, current_numeric_value = get_op_and_val(params[filter.qname])
      %div#filter-range{ data: { "filter-target": "range" } }
        .row
          .col-md-4
            = f.input :op,
                    as: :radio_buttons,
                    required: false,
                    label: '',
                    collection: [[t('events_module.filter_modal.at_least'), 'â‰¥'],
                                 [t('events_module.filter_modal.at_most'), 'â‰¤'],
                                 [t('events_module.filter_modal.exactly'), '=']],
                    checked: [op]
          .col-md-8
            = f.input_field :num,
                          value: current_numeric_value,
                          class: "form-control",
                          data: { "filter-target": "numInput" }

  .modal-footer.d-flex.justify-content-between
    %button.btn.btn-outline-secondary{type: "button", "data-bs-dismiss": "modal"}
      = t('cancel')
    .d-flex.gap-2
      = link_to t('clear_filter'), '#',
              class: "btn btn-secondary",
              data: { action: "click->filter#clearFilter" }
      = link_to t('apply_filter'), '#',
              id: "apply_filter_btn",
              class: "btn btn-primary",
              data: { action: "click->filter#applyFilter" }



