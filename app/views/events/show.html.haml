%section
  .page-header
    .pull-right
      - if policy(@conference).manage?
        = action_button "primary", t('events_module.edit_event'), edit_event_path(@event), hint: t('events_module.edit_event_hint')
        = action_button "primary", t('events_module.edit_people'), edit_people_event_path(@event), hint: t('events_module.edit_people_hint')
        - if @conference.ticket_type == 'integrated' and !@conference.bulk_notification_enabled and @conference.call_for_participation.present?
          - if @event.transition_possible? :accept
            = action_button "success", t('events_module.accept_event'), update_state_event_path(@event, transition: :accept, send_mail: true), method: :put, hint: t('events_module.accept_event_hint')
          - if @event.transition_possible? :reject
            = action_button "danger", t('events_module.reject_event') , update_state_event_path(@event, transition: :reject, send_mail: true), method: :put, confirm: t('are_you_sure'), hint: t('events_module.reject_event_hint')
        - if @event.transition_possible? :accept
          = action_button "success", t('events_module.accept_event_no_email'), update_state_event_path(@event, transition: :accept), method: :put, hint: t('events_module.accept_event_no_email_hint')
        - if @event.transition_possible? :reject
          = action_button "danger", t('events_module.reject_event_no_email'), update_state_event_path(@event, transition: :reject), method: :put, confirm:t('are_you_sure'), hint: t('events_module.reject_event_no_email_hint')
        - if @event.transition_possible? :confirm
          = action_button "", t('events_module.confirm_event'), update_state_event_path(@event, transition: :confirm), method: :put, hint: t('events_module.confirm_event_hint')
        - if @event.transition_possible? :cancel
          = action_button "danger", t('events_module.cancel_event'), update_state_event_path(@event, transition: :cancel), method: :put, hint: t('events_module.cancel_event_hint')
        - if @event.transition_possible? :notify
          = action_button "", t('events_module.custom_notification'), custom_notification_event_path(event_id: @event), method: :post, hint: t('events_module.custom_notification_hint')
        - if @conference.ticket_server_enabled?
          - unless @event.remote_ticket?
            = action_button "primary", t('events_module.add_ticket'), create_event_ticket_path(event_id: @event), method: :post, title: t('events_module.add_ticket_hint')
      - elsif current_user.is_speaker_in?(@event)
        = action_button "small", t('edit'), edit_cfp_event_path(@event)

    %h1= t('titles.event', event: @event.title)
  = render 'shared/events_tabs'
  .row
    .span16
      - @event.conflicts.each do |conflict|
        = render "conflicts/#{conflict.conflict_type}", conflict: conflict
  .row
    .span6
      %h2= t(:basic_information)
      %p
        %b= Event.human_attribute_name(:subtitle) + ':'
        = @event.subtitle
      %p
        %b= Event.human_attribute_name(:track) + ':'
        = @event.track_name
      %p
        %b= Event.human_attribute_name(:event_type) + ':'
        = @event.localized_event_type
      - if policy(@conference).manage?
        %p
          %b= Event.human_attribute_name(:state) + ':'
          = t(@event.state, scope: :options) unless @event.state.blank?
      - unless @event.ticket.nil? or @event.ticket.remote_ticket_id.nil?
        %p
          %b= t('col_ticket')
          -if @conference.ticket_server.nil?
            = @event.ticket.remote_ticket_id
          -else
            = link_to @event.ticket.remote_ticket_id, get_ticket_view_url( @event.ticket.remote_ticket_id ), target: "_blank"
      %p
        %b= t('col_language')
        = @event.language
      %p
        %b= t('col_public')
        = check_box_tag :public, @event.public, @event.public, disabled: true
      %p
        %b= t('avg_audience_feedback')
        = number_with_precision @event.average_feedback, precision: 1
    .span6
      %h2= t('people')
      %p= @event.speakers.map{ |p| link_to p.public_name, p}.join(", ").html_safe
      %h2= t('scheduling')
      %p
        %b= t('col_time_slots')
        = format_time_slots @event.time_slots
      - if policy(@conference).manage?
        %p
          %b= t('col_start_time')
          = event_start_time
        %p
          %b Mehrt√§gig, Anzahl der Tage:
          = @event.number_of_repeats
      %p
        %b= t('col_room')
        = @event.room.try(:name)
      -if @event.conference != @conference
        %b= t('col_conference')
        = @event.conference.acronym
    .span4
      = image_box @event.logo, :large
  .row
    .span16
      %hr
      %h2= t('content')
  .row
    .span8
      %p
        %b= t('col_abstract')
        = simple_format @event.abstract
    .span8
      %p
        %b= t('col_description')
        = simple_format @event.description
      %p
        - if @event.links.any?
          %b= t('col_links')
          %br/
          - @event.links.each do |link|
            = link_to link.title, fix_http_proto(link.url)
            %br/
      %p
        - if @event.event_attachments.any?
          %b=t('col_files')
          %ul
            - @event.event_attachments.each do |attachment|
              %li= link_to attachment.link_title, attachment.attachment.url
  -if @event.event_classifiers.any?
    .row
      .span6
        %p
          %b= t('col_classifiers')
          - @event.event_classifiers.each do |ec|
            %p
              %meter{ min: 0, max: 100, value: ec.value, class: 'classifier-meter' }
              = ec.classifier.name + ": " + ec.value.to_s + " %"
  .row
    .span16
      %h2= t('notes')
  .row
    - if policy(@conference).manage?
      .span8
        %p
          %b= t('col_notes_admin')
          = @event.note
    .span8
      %p
        %b= t('col_submission_notes')
        = @event.submission_note
  .row
    .span8
      %p
        %b= Event.human_attribute_name(:tech_rider) + ':'
        = @event.tech_rider

  .row
    .span8
      = render partial: 'events/event_tags', locals: { event: @event, short: false }

    .span8
      %p
        %b #{Event.human_attribute_name('methods')}:
        = methods_string(@event)

  .row
    .span16
      %p
        %b #{Event.human_attribute_name('other_locations')}:
        = @event.other_locations
  .row
    .span8
      %p
        %b #{Event.human_attribute_name('target_audience_experience')}:
        = @event.target_audience_experience
