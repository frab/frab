- content_for :title do
  = "#{event_title} | #{schedule_title}"

- event = @view_model.event
%h2= event_title_with_type(event)
%h3.title= event.subtitle

.column.left#basic
  = image_box(event.logo, :large)
  - if event.do_not_record
    %p
      %b #{t '.no_recording'}
  = simple_format event.abstract, class: 'abstract'
  = simple_format event.description, class: 'description'

.column.left#details
  %h3= t '.info'
  %p
    %b #{t '.day'}:
    = link_to l(event.start_time.to_date), public_schedule_path(day: @conference.day_at(event.start_time))
    %br/
    %b #{t '.start_time'}:
    = l event.start_time, format: :time
    %br/
    %b #{t '.duration'}:
    = format_time_slots(event.time_slots)
    %br/
    %b #{t '.room'}:
    = event.room.try(:name)
    %br/
    - unless event.track.blank?
      %b #{t '.track'}:
      - if different_track_colors?
        %font.event{class: "track-#{event.track.try(:name).parameterize}"}
          = link_to event.track.try(:name), public_events_path(anchor: "#{event.track.try(:name).downcase}")
      - else
        = link_to event.track.try(:name), public_events_path(anchor: "#{event.track.try(:name).downcase}")
    %br/
    - if @conference.languages_including_subs.count > 1
      %b #{t '.language'}:
      = event.language
  %h3 #{t '.links'}:
  %ul
    %li= link_to "iCalendar", public_event_path(id: event.id, format: :ics)
    - event.links.each do |link|
      %li= link_to link.title, link.url
    - if event.video_url
      %li= link_to 'Video', event.video_url

  - if event.event_attachments.is_public.any?
    %h3= t '.files'
    %ul
      - event.event_attachments.is_public.each do |attachment|
        %li= link_to attachment.link_title, attachment.attachment.url
  - if @conference.feedback_enabled?
    %h3= t '.feedback'
    %p
      = link_to t('.feedback_link'), new_public_event_feedback_url(event_id: event)
  - unless @view_model.concurrent_events.blank?
    #concurrent_events.column.left
      %h3 #{t '.concurrent_events'}
      %dl.dl-horizontal
        - @view_model.concurrent_events.each do |event|
          - next if event.id == event.id
          %dt= Room.find(event.room_id).name
          %dd= link_to event.title, public_event_path( id: event.id )

.column.right#sidebar
  %h3= t '.speakers'
  %table.list
    %tbody
      - event.speakers.each do |speaker|
        %tr
          %td= image_box speaker.avatar, :small
          %td= link_to speaker.public_name, public_speaker_path(id: speaker.id)

%script{:type => 'application/ld+json'}
  - performers = event.speakers.map { |speaker| { name: speaker.public_name, '@type': 'Person', sameAs: public_speaker_path(:id => speaker.id), image: image_path(speaker.avatar.url(:small)) } }
  :plain
    {
      "@context" : "http://schema.org",
      "@type" : "Event",
      "name" : "#{event.title}",
      "location" : {
        "@type" : "Place",
        "name" : "#{event.room.try(:name)}",
        "address" : "#{@conference.title}"
      },
      "startDate" : "#{event.start_time.strftime("%F")}T#{event.start_time.strftime("%T%z")}",
      "endDate" : "#{event.end_time.strftime("%F")}T#{event.end_time.strftime("%T%z")}",
      "performer" : #{performers.to_json},
      "inLanguage" : "#{event.language}",
      "superEvent" : {
        "@type" : "Event",
        "sameAs" : "#{public_schedule_index_path}",
        "name" : "#{@conference.title}",
        "location" : {
          "@type" : "Place",
          "name" : "#{@conference.title}",
          "address" : "#{@conference.title}"
        },
        "startDate" : "#{@conference.first_day.start_date.strftime("%F")}T#{@conference.first_day.start_date.strftime("%T%z")}"
      }
    }
