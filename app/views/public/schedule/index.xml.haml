!!! XML
%schedule
  %generator{name: 'frab', version: '0.7'}
  - unless @conference.schedule_version.nil? or @conference.schedule_version.empty?
    %version= @conference.schedule_version
  %conference
    %acronym= @conference.acronym
    %title= @conference.title
    - if @conference.days.length > 0
      %start= @conference.first_day.start_date.strftime('%Y-%m-%d')
      %end= @conference.last_day.end_date.strftime('%Y-%m-%d')
    %days= @conference.days.length
    %timeslot_duration= duration_to_time(@conference.timeslot_duration)
    %time_zone_name= @conference.timezone_IANA
    - if @conference.program_export_base_url.present?
      %base_url= @conference.program_export_base_url
    - else
      %base_url= request.base_url
  - @conference.days.each_with_index do |day, index|
    %day{index: (index + 1), date: day.start_date.strftime('%Y-%m-%d'), start: day.start_date.iso8601, end: day.end_date.iso8601}
      - @conference.rooms_including_subs.each do |room|
        %room{name: room.name}
          - room.events.is_public.accepted.scheduled_on(day).order(:start_time).each do |event|
            %event{id: event.id, guid: event.guid}
              %date= event.start_time.iso8601
              %start= event.start_time.strftime('%H:%M')
              %duration= format_time_slots(event.time_slots)
              %room= room.name
              %slug= event.slug
              %url= public_program_event_url(event)
              %recording
                %license= event.recording_license
                %optout= event.do_not_record
              %title= event.title
              %subtitle= event.subtitle
              %track= event.track.try(:name)
              %type= event.event_type
              %language= event.language
              %abstract= event.abstract
              %description= event.description
              %logo= event.logo_path
              %persons
                - event.speakers.each do |speaker|
                  %person{id: speaker.id}= speaker.public_name
              %links
                - event.links.each do |link|
                  %link{href: link.url}= link.title ? link.title : link.url
              %attachments
                - event.event_attachments.is_public.each do |attachment|
                  %attachment{href: attachment.attachment.url}= attachment.link_title
